'use strict';
(self.webpackChunkangular_material_components =
  self.webpackChunkangular_material_components || []).push([
  [139],
  {
    4139: (Y, F, s) => {
      s.r(F), s.d(F, { DemoDatetimeComponent: () => A });
      var e = s(963),
        p = s(8893),
        _ = s(5299),
        u = s(2757),
        M = s(1292),
        c = s(9836),
        k = s(6858),
        f = s(5246),
        g = s(4848),
        D = s(6355),
        h = s(7171),
        m = s(4135),
        b = s(6359),
        E = s(1586);
      const j = (n, i) => i.value;
      function C(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function R(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function T(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function S(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function w(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function P(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function y(n, i) {
        if ((1 & n && (e.j41(0, 'mat-radio-button', 26), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a.value), e.R7$(), e.SpI(' ', a.label, '');
        }
      }
      function O(n, i) {
        if ((1 & n && (e.j41(0, 'mat-option', 30), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a), e.R7$(), e.SpI(' ', a, ' ');
        }
      }
      function v(n, i) {
        if ((1 & n && (e.j41(0, 'mat-option', 30), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a), e.R7$(), e.SpI(' ', a, ' ');
        }
      }
      function I(n, i) {
        if ((1 & n && (e.j41(0, 'mat-option', 30), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a), e.R7$(), e.SpI(' ', a, ' ');
        }
      }
      function $(n, i) {
        if ((1 & n && (e.j41(0, 'mat-option', 30), e.EFF(1), e.k0s()), 2 & n)) {
          const a = i.$implicit;
          e.Y8G('value', a), e.R7$(), e.SpI(' ', a, ' ');
        }
      }
      let A = (() => {
        var n;
        class i {
          constructor() {
            (this.pickerElement = (0, e.ebz)(m.m7)),
              (this.disabled = !1),
              (this.showSpinners = !0),
              (this.showSeconds = !1),
              (this.touchUi = !1),
              (this.enableMeridian = !1),
              (this.stepHour = 1),
              (this.stepMinute = 1),
              (this.stepSecond = 1),
              (this.color = 'primary'),
              (this.disableMinute = !1),
              (this.hideTime = !1),
              (this.dateControl = new p.MJ(null)),
              (this.options = [
                { value: !0, label: 'True' },
                { value: !1, label: 'False' },
              ]),
              (this.listColors = ['primary', 'accent', 'warn']),
              (this.stepHours = [1, 2, 3, 4, 5]),
              (this.stepMinutes = [1, 5, 10, 15, 20, 25]),
              (this.stepSeconds = [1, 5, 10, 15, 20, 25]),
              (this.code1 = 'npm install --save @ngxmc/datetime-picker'),
              (this.code3 =
                '\n  <mat-form-field>\n    <input matInput [ngxMatDatetimePicker]="picker" placeholder="Choose a date" [formControl]="dateControl"\n      [min]="minDate" [max]="maxDate" [disabled]="disabled">\n    <ngx-mat-datepicker-toggle matSuffix [for]="picker"></ngx-mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #picker [showSpinners]="showSpinners" [showSeconds]="showSeconds"\n      [stepHour]="stepHour" [stepMinute]="stepMinute" [stepSecond]="stepSecond" [touchUi]="touchUi"\n      [color]="color" [enableMeridian]="enableMeridian" [disableMinute]="disableMinute" [hideTime]="hideTime">\n    </ngx-mat-datetime-picker>\n  </mat-form-field>\n'),
              (this.code2 =
                "\n  import {\n    NgxMatDatetimePickerComponent,\n    NgxMatNativeDateComponent,\n    NgxMatTimepickerComponent\n  } from '@ngxmc/datetime-picker';\n\n  @Component({\n    imports: [\n      ...\n      NgxMatDatetimePickerComponent,\n      NgxMatTimepickerComponent,\n      NgxMatNativeDateComponent,\n      ...\n    ]\n  })\n  export class AppComponent { }"),
              (this.code4 = 'npm install --save  @angular/material-moment-adapter'),
              (this.code5 =
                '@Injectable()\n  export class CustomDateAdapter extends DateAdapter<D> {...}\n  // D can be Date, Moment or customized type'),
              (this.code6 =
                '@Component({\n    providers: [\n      {\n        provide: DateAdapter,\n        useClass: CustomDateAdapter,\n        deps: [MAT_DATE_LOCALE, NGX_MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }\n    ],\n  })\n  export class CustomDateComponent { }\n'),
              (this.code7 =
                '// If using Moment\nconst CUSTOM_DATE_FORMATS: NgxMatDateFormats = {\n  parse: {\n    dateInput: "l, LTS"\n  },\n  display: {\n    dateInput: "l, LTS",\n    monthYearLabel: "MMM YYYY",\n    dateA11yLabel: "LL",\n    monthYearA11yLabel: "MMMM YYYY"\n  }\n};\n\n//and in the module providers\nproviders: [\n    { provide: MAT_DATE_FORMATS, useValue: CUSTOM_MOMENT_FORMATS }\n  ]'),
              (this.code8 =
                '<link href="https://fonts.googleapis.com/icon?family=Material+Icons&display=block" rel="stylesheet">'),
              (this.code9 =
                '<mat-form-field>\n  <input\n    matInput\n    [ngxMatDatetimePicker]="pickerCustomIcon"\n    placeholder="Choose a date"\n    [formControl]="dateControl"\n    [min]="minDate"\n    [max]="maxDate"\n    [disabled]="disabled" />\n  <ngx-mat-datepicker-toggle matSuffix [for]="pickerCustomIcon"></ngx-mat-datepicker-toggle>\n  <ngx-mat-datetime-picker\n    #pickerCustomIcon\n    [showSpinners]="showSpinners"\n    [showSeconds]="showSeconds"\n    [stepHour]="stepHour"\n    [stepMinute]="stepMinute"\n    [stepSecond]="stepSecond"\n    [touchUi]="touchUi"\n    [color]="color"\n    [enableMeridian]="enableMeridian"\n    [disableMinute]="disableMinute"\n    [hideTime]="hideTime">\n    <ngx-mat-datepicker-actions>\n      <div class="datepicker-acctions">\n        <button mat-button ngxMatDatepickerClear close="true">Clear</button>\n\n        <div>\n          <button mat-button ngxMatDatepickerCancel>Cancel</button>\n          <button mat-raised-button color="primary" ngxMatDatepickerApply [color]="color">\n            Apply\n          </button>\n        </div>\n      </div>\n    </ngx-mat-datepicker-actions>\n  </ngx-mat-datetime-picker>\n</mat-form-field>'),
              (this.code10 =
                '\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]="pickerCustomIcon"\n      placeholder="Choose a date"\n      [formControl]="dateControl"\n      [min]="minDate"\n      [max]="maxDate"\n      [disabled]="disabled" />\n    <ngx-mat-datepicker-toggle matSuffix [for]="pickerCustomIcon">\n      <mat-icon ngxMatDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\n    </ngx-mat-datepicker-toggle>\n    <ngx-mat-datetime-picker\n      #pickerCustomIcon\n      [showSpinners]="showSpinners"\n      [showSeconds]="showSeconds"\n      [stepHour]="stepHour"\n      [stepMinute]="stepMinute"\n      [stepSecond]="stepSecond"\n      [touchUi]="touchUi"\n      [color]="color"\n      [enableMeridian]="enableMeridian"\n      [disableMinute]="disableMinute"\n      [hideTime]="hideTime">\n    </ngx-mat-datetime-picker>\n  </mat-form-field>');
          }
          toggleMinDate(l) {
            l.checked ? this._setMinDate() : (this.minDate = null);
          }
          toggleMaxDate(l) {
            l.checked ? this._setMaxDate() : (this.maxDate = null);
          }
          closePicker() {
            this.pickerElement().close();
          }
          _setMinDate() {
            const l = new Date();
            (this.minDate = new Date()), this.minDate.setDate(l.getDate() - 1);
          }
          _setMaxDate() {
            const l = new Date();
            (this.maxDate = new Date()), this.maxDate.setDate(l.getDate() + 1);
          }
        }
        return (
          ((n = i).ɵfac = function (l) {
            return new (l || n)();
          }),
          (n.ɵcmp = e.VBU({
            type: n,
            selectors: [['app-demo-datetime']],
            viewQuery: function (l, t) {
              1 & l && e.wEZ(t.pickerElement, m.m7, 5), 2 & l && e.NyB();
            },
            features: [e.Jv_([{ provide: c.U$, useValue: { appearance: 'fill' } }])],
            decls: 388,
            vars: 89,
            consts: [
              ['picker', ''],
              ['pickerWithActions', ''],
              ['pickerCustomIcon', ''],
              [3, 'mat-stretch-tabs'],
              ['label', 'API'],
              ['href', 'https://www.buymeacoffee.com/gnurub', 'target', '_blank'],
              [
                'src',
                'https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png',
                'alt',
                'Buy Me A Coffee',
                2,
                'height',
                '35px !important',
                'width',
                '150px !important',
              ],
              ['href', 'https://www.npmjs.com/package/@ngxmc/datetime-picker', 'target', '_blank'],
              [
                'src',
                'https://badge.fury.io/js/%40angular-material-components%2Fdatetime-picker.svg',
              ],
              ['ngxMatHighlight', ''],
              ['ngxMatHighlight', '', 1, 'language-typescript'],
              [1, 'api-table-properties'],
              ['href', 'https://www.npmjs.com/package/@angular/material-moment-adapter'],
              ['ngxMatHighlight', '', 1, 'language-html'],
              ['href', 'https://material.angular.io/guide/theming#using-a-pre-built-theme'],
              ['ngxMatHighlight', '', 1, 'language-css'],
              ['label', 'Example'],
              [1, 'zone', 'zone-picker'],
              [1, 'datepicker-wrapper'],
              [
                'matInput',
                '',
                'placeholder',
                'Choose a date',
                3,
                'ngxMatDatetimePicker',
                'formControl',
                'min',
                'max',
                'disabled',
              ],
              ['matSuffix', '', 3, 'for'],
              [
                3,
                'showSpinners',
                'showSeconds',
                'stepHour',
                'stepMinute',
                'stepSecond',
                'touchUi',
                'color',
                'enableMeridian',
                'disableMinute',
                'hideTime',
              ],
              [1, 'zone', 'zone-config'],
              [1, 'config-wrapper'],
              [1, 'label'],
              ['aria-label', 'Select an option', 3, 'ngModelChange', 'ngModel', 'color'],
              [1, 'example-radio-button', 3, 'value'],
              [1, 'config-wrapper', 'config-wrapper_step'],
              [3, 'color'],
              [3, 'ngModelChange', 'ngModel'],
              [3, 'value'],
              [3, 'change', 'color'],
              [1, 'datepicker-acctions'],
              ['mat-button', '', 'ngxMatDatepickerClear', '', 'close', 'true'],
              ['mat-button', '', 'ngxMatDatepickerCancel', ''],
              [
                'mat-raised-button',
                '',
                'color',
                'primary',
                'ngxMatDatepickerApply',
                '',
                3,
                'color',
              ],
              ['ngxMatDatepickerToggleIcon', ''],
            ],
            template: function (l, t) {
              if (1 & l) {
                const r = e.RV6();
                e.j41(0, 'mat-tab-group', 3)(1, 'mat-tab', 4)(2, 'p'),
                  e.EFF(3, 'Thank you so much for your coffee \u2764\ufe0f'),
                  e.k0s(),
                  e.j41(4, 'a', 5),
                  e.nrm(5, 'img', 6),
                  e.k0s(),
                  e.j41(6, 'h1'),
                  e.EFF(7, 'API reference for @angular-material-components/datetime-picker'),
                  e.k0s(),
                  e.j41(8, 'h2'),
                  e.EFF(9, 'Getting started'),
                  e.k0s(),
                  e.j41(10, 'a', 7),
                  e.nrm(11, 'img', 8),
                  e.k0s(),
                  e.j41(12, 'pre')(13, 'code', 9),
                  e.EFF(14),
                  e.k0s()(),
                  e.j41(15, 'h2'),
                  e.EFF(16, 'Setup'),
                  e.k0s(),
                  e.j41(17, 'pre'),
                  e.EFF(18, '      '),
                  e.j41(19, 'code', 10),
                  e.EFF(20),
                  e.k0s(),
                  e.EFF(21, '\n    '),
                  e.k0s(),
                  e.j41(22, 'h2'),
                  e.EFF(23, 'Properties @Input'),
                  e.k0s(),
                  e.j41(24, 'table', 11)(25, 'tbody')(26, 'tr')(27, 'th'),
                  e.EFF(28, 'Name'),
                  e.k0s(),
                  e.j41(29, 'th'),
                  e.EFF(30, 'Type'),
                  e.k0s(),
                  e.j41(31, 'th'),
                  e.EFF(32, 'Default value'),
                  e.k0s(),
                  e.j41(33, 'th'),
                  e.EFF(34, 'Description'),
                  e.k0s()(),
                  e.j41(35, 'tr')(36, 'td')(37, 'div'),
                  e.EFF(38, 'disabled'),
                  e.k0s()(),
                  e.j41(39, 'td'),
                  e.EFF(40, 'boolean'),
                  e.k0s(),
                  e.j41(41, 'td'),
                  e.EFF(42, 'null'),
                  e.k0s(),
                  e.j41(43, 'td')(44, 'p'),
                  e.EFF(45, "If true, the picker is readonly and can't be modified"),
                  e.k0s()()(),
                  e.j41(46, 'tr')(47, 'td')(48, 'div'),
                  e.EFF(49, 'showSpinners'),
                  e.k0s()(),
                  e.j41(50, 'td'),
                  e.EFF(51, 'boolean'),
                  e.k0s(),
                  e.j41(52, 'td'),
                  e.EFF(53, 'true'),
                  e.k0s(),
                  e.j41(54, 'td')(55, 'p'),
                  e.EFF(56, 'If true, the spinners above and below input are visible'),
                  e.k0s()()(),
                  e.j41(57, 'tr')(58, 'td')(59, 'div'),
                  e.EFF(60, 'showSeconds'),
                  e.k0s()(),
                  e.j41(61, 'td'),
                  e.EFF(62, 'boolean'),
                  e.k0s(),
                  e.j41(63, 'td'),
                  e.EFF(64, 'true'),
                  e.k0s(),
                  e.j41(65, 'td')(66, 'p'),
                  e.EFF(67, 'If true, it is not possible to select seconds'),
                  e.k0s()()(),
                  e.j41(68, 'tr')(69, 'td')(70, 'div'),
                  e.EFF(71, 'disableMinute'),
                  e.k0s()(),
                  e.j41(72, 'td'),
                  e.EFF(73, 'boolean'),
                  e.k0s(),
                  e.j41(74, 'td'),
                  e.EFF(75, 'false'),
                  e.k0s(),
                  e.j41(76, 'td')(77, 'p'),
                  e.EFF(78, 'If true, the minute is readonly'),
                  e.k0s()()(),
                  e.j41(79, 'tr')(80, 'td')(81, 'div'),
                  e.EFF(82, 'defaultTime'),
                  e.k0s()(),
                  e.j41(83, 'td'),
                  e.EFF(84, 'Array'),
                  e.k0s(),
                  e.j41(85, 'td'),
                  e.EFF(86, 'undefined'),
                  e.k0s(),
                  e.j41(87, 'td')(88, 'p'),
                  e.EFF(
                    89,
                    'An array [hour, minute, second] for default time when the date is not yet defined',
                  ),
                  e.k0s()()(),
                  e.j41(90, 'tr')(91, 'td')(92, 'div'),
                  e.EFF(93, 'stepHour'),
                  e.k0s()(),
                  e.j41(94, 'td'),
                  e.EFF(95, 'number'),
                  e.k0s(),
                  e.j41(96, 'td'),
                  e.EFF(97, '1'),
                  e.k0s(),
                  e.j41(98, 'td')(99, 'p'),
                  e.EFF(100, 'The number of hours to add/substract when clicking hour spinners'),
                  e.k0s()()(),
                  e.j41(101, 'tr')(102, 'td')(103, 'div'),
                  e.EFF(104, 'stepMinute'),
                  e.k0s()(),
                  e.j41(105, 'td'),
                  e.EFF(106, 'number'),
                  e.k0s(),
                  e.j41(107, 'td'),
                  e.EFF(108, '1'),
                  e.k0s(),
                  e.j41(109, 'td')(110, 'p'),
                  e.EFF(
                    111,
                    'The number of minutes to add/substract when clicking minute spinners',
                  ),
                  e.k0s()()(),
                  e.j41(112, 'tr')(113, 'td')(114, 'div'),
                  e.EFF(115, 'stepSecond'),
                  e.k0s()(),
                  e.j41(116, 'td'),
                  e.EFF(117, 'number'),
                  e.k0s(),
                  e.j41(118, 'td'),
                  e.EFF(119, '1'),
                  e.k0s(),
                  e.j41(120, 'td')(121, 'p'),
                  e.EFF(
                    122,
                    'The number of seconds to add/substract when clicking second spinners',
                  ),
                  e.k0s()()(),
                  e.j41(123, 'tr')(124, 'td')(125, 'div'),
                  e.EFF(126, 'color'),
                  e.k0s()(),
                  e.j41(127, 'td'),
                  e.EFF(128, 'ThemePalette'),
                  e.k0s(),
                  e.j41(129, 'td'),
                  e.EFF(130, 'undefined'),
                  e.k0s(),
                  e.j41(131, 'td')(132, 'p'),
                  e.EFF(133, "Color palette to use on the datepicker's calendar"),
                  e.k0s()()(),
                  e.j41(134, 'tr')(135, 'td')(136, 'div'),
                  e.EFF(137, 'enableMeridian'),
                  e.k0s()(),
                  e.j41(138, 'td'),
                  e.EFF(139, 'boolean'),
                  e.k0s(),
                  e.j41(140, 'td'),
                  e.EFF(141, 'false'),
                  e.k0s(),
                  e.j41(142, 'td')(143, 'p'),
                  e.EFF(144, 'Whether to display 12H or 24H mode'),
                  e.k0s()()(),
                  e.j41(145, 'tr')(146, 'td')(147, 'div'),
                  e.EFF(148, 'hideTime'),
                  e.k0s()(),
                  e.j41(149, 'td'),
                  e.EFF(150, 'boolean'),
                  e.k0s(),
                  e.j41(151, 'td'),
                  e.EFF(152, 'false'),
                  e.k0s(),
                  e.j41(153, 'td')(154, 'p'),
                  e.EFF(155, 'If true, the time is hidden'),
                  e.k0s()()(),
                  e.j41(156, 'tr')(157, 'td')(158, 'div'),
                  e.EFF(159, 'touchUi'),
                  e.k0s()(),
                  e.j41(160, 'td'),
                  e.EFF(161, 'boolean'),
                  e.k0s(),
                  e.j41(162, 'td'),
                  e.EFF(163, 'false'),
                  e.k0s(),
                  e.j41(164, 'td')(165, 'p'),
                  e.EFF(
                    166,
                    ' Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather than a popup and elements have more padding to allow for bigger touch targets. ',
                  ),
                  e.k0s()()()()(),
                  e.j41(167, 'h2'),
                  e.EFF(168, 'Choosing a date implementation and date format settings'),
                  e.k0s(),
                  e.j41(169, 'p'),
                  e.EFF(
                    170,
                    ' The datepicker was built to be date implementation agnostic. This means that it can be made to work with a variety of different date implementations. However it also means that developers need to make sure to provide the appropriate pieces for the datepicker to work with their chosen implementation. ',
                  ),
                  e.k0s(),
                  e.j41(171, 'p'),
                  e.EFF(
                    172,
                    'The easiest way to ensure this is to import one of the provided date modules:',
                  ),
                  e.k0s(),
                  e.j41(173, 'table', 11)(174, 'tbody')(175, 'tr'),
                  e.nrm(176, 'th'),
                  e.j41(177, 'th'),
                  e.EFF(178, 'NgxMatNativeDateModule'),
                  e.k0s(),
                  e.j41(179, 'th'),
                  e.EFF(180, 'NgxMatMomentModule'),
                  e.k0s()(),
                  e.j41(181, 'tr')(182, 'td'),
                  e.EFF(183, 'Date type'),
                  e.k0s(),
                  e.j41(184, 'td'),
                  e.EFF(185, 'Date'),
                  e.k0s(),
                  e.j41(186, 'td'),
                  e.EFF(187, 'Moment'),
                  e.k0s()(),
                  e.j41(188, 'tr')(189, 'td'),
                  e.EFF(190, 'Dependencies'),
                  e.k0s(),
                  e.j41(191, 'td'),
                  e.EFF(192, 'None'),
                  e.k0s(),
                  e.j41(193, 'td'),
                  e.EFF(194, 'Moment.js'),
                  e.k0s()(),
                  e.j41(195, 'tr')(196, 'td'),
                  e.EFF(197, 'Import from'),
                  e.k0s(),
                  e.j41(198, 'td'),
                  e.EFF(199, '@angular-material-components/datetime-picker'),
                  e.k0s(),
                  e.j41(200, 'td')(201, 'a', 12),
                  e.EFF(202, '@angular-material-components/moment-adapter'),
                  e.k0s()()()()(),
                  e.EFF(203, ' To use '),
                  e.j41(204, 'strong'),
                  e.EFF(205, 'NgxMatMomentModule'),
                  e.k0s(),
                  e.EFF(206, ': '),
                  e.j41(207, 'pre')(208, 'code', 9),
                  e.EFF(209),
                  e.k0s()(),
                  e.j41(210, 'p'),
                  e.EFF(211, ' Please note: '),
                  e.j41(212, 'strong'),
                  e.EFF(213, 'NgxMatNativeDateModule'),
                  e.k0s(),
                  e.EFF(
                    214,
                    " is based off the functionality available in JavaScript's native Date object. Thus it is not suitable for many locales. One of the biggest shortcomings of the native Date object is the inability to set the parse format. ",
                  ),
                  e.k0s(),
                  e.j41(215, 'p'),
                  e.EFF(216, ' We highly recommend using the '),
                  e.j41(217, 'strong'),
                  e.EFF(218, 'NgxMatMomentModule'),
                  e.k0s(),
                  e.EFF(219, ' or a custom '),
                  e.j41(220, 'strong'),
                  e.EFF(221, 'DateAdapter'),
                  e.k0s(),
                  e.EFF(222, ' that works with the formatting/parsing library of your choice. '),
                  e.k0s(),
                  e.EFF(223, ' For example: Creating a custom date adapter '),
                  e.j41(224, 'pre')(225, 'code', 10),
                  e.EFF(226),
                  e.k0s()(),
                  e.EFF(227, ' Creating a custom date adapter module '),
                  e.j41(228, 'pre')(229, 'code', 10),
                  e.EFF(230),
                  e.k0s()(),
                  e.EFF(231, ' You can also customize the date format by providing your custom '),
                  e.j41(232, 'strong'),
                  e.EFF(233, 'MAT_DATE_FORMATS'),
                  e.k0s(),
                  e.EFF(234, ' in your module. '),
                  e.j41(235, 'pre')(236, 'code', 10),
                  e.EFF(237),
                  e.k0s()(),
                  e.j41(238, 'h2'),
                  e.EFF(239, 'Datetime picker with action buttons'),
                  e.k0s(),
                  e.j41(240, 'pre')(241, 'code', 13),
                  e.EFF(242),
                  e.k0s()(),
                  e.j41(243, 'h2'),
                  e.EFF(244, 'Datetime picker with custom icon'),
                  e.k0s(),
                  e.j41(245, 'pre')(246, 'code', 13),
                  e.EFF(247),
                  e.k0s()(),
                  e.j41(248, 'h2'),
                  e.EFF(249, 'Theming'),
                  e.k0s(),
                  e.j41(250, 'p'),
                  e.EFF(251, ' @see @angular/material '),
                  e.j41(252, 'a', 14),
                  e.EFF(253, 'Using a pre-built theme'),
                  e.k0s()(),
                  e.j41(254, 'p'),
                  e.EFF(255, 'Add the Material Design icon font to your index.html'),
                  e.k0s(),
                  e.j41(256, 'pre')(257, 'code', 15),
                  e.EFF(258),
                  e.k0s()()(),
                  e.j41(259, 'mat-tab', 16)(260, 'mat-card', 17)(261, 'mat-card-content')(
                    262,
                    'div',
                    18,
                  )(263, 'mat-form-field'),
                  e.nrm(264, 'input', 19)(265, 'ngx-mat-datepicker-toggle', 20)(
                    266,
                    'ngx-mat-datetime-picker',
                    21,
                    0,
                  ),
                  e.k0s()(),
                  e.j41(268, 'h4'),
                  e.EFF(269),
                  e.k0s()()(),
                  e.j41(270, 'mat-card', 22)(271, 'mat-card-content')(272, 'div', 23)(
                    273,
                    'span',
                    24,
                  ),
                  e.EFF(274, 'disabled (Default: false) '),
                  e.k0s(),
                  e.j41(275, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.disabled, o) || (t.disabled = o), e.Njj(o);
                  }),
                  e.Z7z(276, C, 2, 2, 'mat-radio-button', 26, j),
                  e.k0s()(),
                  e.j41(278, 'div', 23)(279, 'span', 24),
                  e.EFF(280, 'showSpinners (Default: true) '),
                  e.k0s(),
                  e.j41(281, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.showSpinners, o) || (t.showSpinners = o), e.Njj(o);
                  }),
                  e.Z7z(282, R, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(284, 'div', 23)(285, 'span', 24),
                  e.EFF(286, 'showSeconds (Default: false) '),
                  e.k0s(),
                  e.j41(287, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.showSeconds, o) || (t.showSeconds = o), e.Njj(o);
                  }),
                  e.Z7z(288, T, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(290, 'div', 23)(291, 'span', 24),
                  e.EFF(292, 'disableMinute (Default: false) '),
                  e.k0s(),
                  e.j41(293, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.disableMinute, o) || (t.disableMinute = o), e.Njj(o);
                  }),
                  e.Z7z(294, S, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(296, 'div', 23)(297, 'span', 24),
                  e.EFF(298, 'touchUi (Default: false) '),
                  e.k0s(),
                  e.j41(299, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.touchUi, o) || (t.touchUi = o), e.Njj(o);
                  }),
                  e.Z7z(300, w, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(302, 'div', 23)(303, 'span', 24),
                  e.EFF(304, 'hideTime (Default: false) '),
                  e.k0s(),
                  e.j41(305, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.hideTime, o) || (t.hideTime = o), e.Njj(o);
                  }),
                  e.Z7z(306, P, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(308, 'div', 23)(309, 'span', 24),
                  e.EFF(310, 'enableMeridian (Default: false) '),
                  e.k0s(),
                  e.j41(311, 'mat-radio-group', 25),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.enableMeridian, o) || (t.enableMeridian = o), e.Njj(o);
                  }),
                  e.Z7z(312, y, 2, 2, 'mat-radio-button', 26, e.fX1),
                  e.k0s()(),
                  e.j41(314, 'div', 27)(315, 'span', 24),
                  e.EFF(316, 'steps '),
                  e.k0s(),
                  e.j41(317, 'mat-form-field', 28)(318, 'mat-label'),
                  e.EFF(319, 'hour (default: 1)'),
                  e.k0s(),
                  e.j41(320, 'mat-select', 29),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.stepHour, o) || (t.stepHour = o), e.Njj(o);
                  }),
                  e.Z7z(321, O, 2, 2, 'mat-option', 30, e.fX1),
                  e.k0s()(),
                  e.j41(323, 'mat-form-field', 28)(324, 'mat-label'),
                  e.EFF(325, 'minute (default: 1)'),
                  e.k0s(),
                  e.j41(326, 'mat-select', 29),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.stepMinute, o) || (t.stepMinute = o), e.Njj(o);
                  }),
                  e.Z7z(327, v, 2, 2, 'mat-option', 30, e.fX1),
                  e.k0s()(),
                  e.j41(329, 'mat-form-field', 28)(330, 'mat-label'),
                  e.EFF(331, 'second (default: 1)'),
                  e.k0s(),
                  e.j41(332, 'mat-select', 29),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.stepSecond, o) || (t.stepSecond = o), e.Njj(o);
                  }),
                  e.Z7z(333, I, 2, 2, 'mat-option', 30, e.fX1),
                  e.k0s()()(),
                  e.j41(335, 'div', 23)(336, 'span', 24),
                  e.EFF(337, 'color (Default: primary) '),
                  e.k0s(),
                  e.j41(338, 'mat-form-field', 28)(339, 'mat-label'),
                  e.EFF(340, 'Select color'),
                  e.k0s(),
                  e.j41(341, 'mat-select', 29),
                  e.mxI('ngModelChange', function (o) {
                    return e.eBV(r), e.DH7(t.color, o) || (t.color = o), e.Njj(o);
                  }),
                  e.Z7z(342, $, 2, 2, 'mat-option', 30, e.fX1),
                  e.k0s()()(),
                  e.j41(344, 'div', 23)(345, 'mat-checkbox', 31),
                  e.bIt('change', function (o) {
                    return e.eBV(r), e.Njj(t.toggleMinDate(o));
                  }),
                  e.EFF(346),
                  e.k0s()(),
                  e.j41(347, 'div', 23)(348, 'mat-checkbox', 31),
                  e.bIt('change', function (o) {
                    return e.eBV(r), e.Njj(t.toggleMaxDate(o));
                  }),
                  e.EFF(349),
                  e.k0s()()()(),
                  e.j41(350, 'pre')(351, 'code', 13),
                  e.EFF(352),
                  e.k0s()(),
                  e.j41(353, 'h2'),
                  e.EFF(354, 'Datetime picker with action buttons'),
                  e.k0s(),
                  e.j41(355, 'pre')(356, 'code', 13),
                  e.EFF(357),
                  e.k0s()(),
                  e.j41(358, 'mat-card', 17)(359, 'mat-card-content')(360, 'mat-form-field'),
                  e.nrm(361, 'input', 19)(362, 'ngx-mat-datepicker-toggle', 20),
                  e.j41(363, 'ngx-mat-datetime-picker', 21, 1)(365, 'ngx-mat-datepicker-actions')(
                    366,
                    'div',
                    32,
                  )(367, 'button', 33),
                  e.EFF(368, 'Clear'),
                  e.k0s(),
                  e.j41(369, 'div')(370, 'button', 34),
                  e.EFF(371, 'Cancel'),
                  e.k0s(),
                  e.j41(372, 'button', 35),
                  e.EFF(373, ' Apply '),
                  e.k0s()()()()()()()(),
                  e.j41(374, 'h2'),
                  e.EFF(375, 'Datetime picker with custom icon'),
                  e.k0s(),
                  e.j41(376, 'pre')(377, 'code', 13),
                  e.EFF(378),
                  e.k0s()(),
                  e.j41(379, 'mat-card', 17)(380, 'mat-card-content')(381, 'mat-form-field'),
                  e.nrm(382, 'input', 19),
                  e.j41(383, 'ngx-mat-datepicker-toggle', 20)(384, 'mat-icon', 36),
                  e.EFF(385, 'keyboard_arrow_down'),
                  e.k0s()(),
                  e.nrm(386, 'ngx-mat-datetime-picker', 21, 2),
                  e.k0s()()()()();
              }
              if (2 & l) {
                const r = e.sdS(267),
                  d = e.sdS(364),
                  o = e.sdS(387);
                e.Y8G('mat-stretch-tabs', !1),
                  e.R7$(14),
                  e.JRh(t.code1),
                  e.R7$(6),
                  e.SpI('', t.code2, '\n      '),
                  e.R7$(189),
                  e.JRh(t.code4),
                  e.R7$(17),
                  e.JRh(t.code5),
                  e.R7$(4),
                  e.JRh(t.code6),
                  e.R7$(7),
                  e.JRh(t.code7),
                  e.R7$(5),
                  e.JRh(t.code9),
                  e.R7$(5),
                  e.JRh(t.code10),
                  e.R7$(11),
                  e.JRh(t.code8),
                  e.R7$(6),
                  e.Y8G('ngxMatDatetimePicker', r)('formControl', t.dateControl)('min', t.minDate)(
                    'max',
                    t.maxDate,
                  )('disabled', t.disabled),
                  e.R7$(),
                  e.Y8G('for', r),
                  e.R7$(),
                  e.Y8G('showSpinners', t.showSpinners)('showSeconds', t.showSeconds)(
                    'stepHour',
                    t.stepHour,
                  )('stepMinute', t.stepMinute)('stepSecond', t.stepSecond)('touchUi', t.touchUi)(
                    'color',
                    t.color,
                  )('enableMeridian', t.enableMeridian)('disableMinute', t.disableMinute)(
                    'hideTime',
                    t.hideTime,
                  ),
                  e.R7$(3),
                  e.SpI(
                    'Selected date: ',
                    null == t.dateControl.value ? null : t.dateControl.value.toLocaleString(),
                    '',
                  ),
                  e.R7$(6),
                  e.R50('ngModel', t.disabled),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.showSpinners),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.showSeconds),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.disableMinute),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.touchUi),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.hideTime),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.R50('ngModel', t.enableMeridian),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.Dyx(t.options),
                  e.R7$(5),
                  e.Y8G('color', t.color),
                  e.R7$(3),
                  e.R50('ngModel', t.stepHour),
                  e.R7$(),
                  e.Dyx(t.stepHours),
                  e.R7$(2),
                  e.Y8G('color', t.color),
                  e.R7$(3),
                  e.R50('ngModel', t.stepMinute),
                  e.R7$(),
                  e.Dyx(t.stepMinutes),
                  e.R7$(2),
                  e.Y8G('color', t.color),
                  e.R7$(3),
                  e.R50('ngModel', t.stepSecond),
                  e.R7$(),
                  e.Dyx(t.stepSeconds),
                  e.R7$(5),
                  e.Y8G('color', t.color),
                  e.R7$(3),
                  e.R50('ngModel', t.color),
                  e.R7$(),
                  e.Dyx(t.listColors),
                  e.R7$(3),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.SpI(
                    ' Min date (Default: null, Demo: now - 1 day) = ',
                    null == t.minDate ? null : t.minDate.toLocaleString(),
                    ' ',
                  ),
                  e.R7$(2),
                  e.Y8G('color', t.color),
                  e.R7$(),
                  e.SpI(
                    ' Max date (Default: null, Demo: now + 2 days) = ',
                    null == t.maxDate ? null : t.maxDate.toLocaleString(),
                    ' ',
                  ),
                  e.R7$(3),
                  e.JRh(t.code3),
                  e.R7$(5),
                  e.JRh(t.code9),
                  e.R7$(4),
                  e.Y8G('ngxMatDatetimePicker', d)('formControl', t.dateControl)('min', t.minDate)(
                    'max',
                    t.maxDate,
                  )('disabled', t.disabled),
                  e.R7$(),
                  e.Y8G('for', d),
                  e.R7$(),
                  e.Y8G('showSpinners', t.showSpinners)('showSeconds', t.showSeconds)(
                    'stepHour',
                    t.stepHour,
                  )('stepMinute', t.stepMinute)('stepSecond', t.stepSecond)('touchUi', t.touchUi)(
                    'color',
                    t.color,
                  )('enableMeridian', t.enableMeridian)('disableMinute', t.disableMinute)(
                    'hideTime',
                    t.hideTime,
                  ),
                  e.R7$(9),
                  e.Y8G('color', t.color),
                  e.R7$(6),
                  e.JRh(t.code10),
                  e.R7$(4),
                  e.Y8G('ngxMatDatetimePicker', o)('formControl', t.dateControl)('min', t.minDate)(
                    'max',
                    t.maxDate,
                  )('disabled', t.disabled),
                  e.R7$(),
                  e.Y8G('for', o),
                  e.R7$(3),
                  e.Y8G('showSpinners', t.showSpinners)('showSeconds', t.showSeconds)(
                    'stepHour',
                    t.stepHour,
                  )('stepMinute', t.stepMinute)('stepSecond', t.stepSecond)('touchUi', t.touchUi)(
                    'color',
                    t.color,
                  )('enableMeridian', t.enableMeridian)('disableMinute', t.disableMinute)(
                    'hideTime',
                    t.hideTime,
                  );
              }
            },
            dependencies: [
              p.YN,
              p.me,
              p.BC,
              p.vS,
              _.Hl,
              _.$z,
              u.Hu,
              u.RN,
              u.m2,
              M.g7,
              M.So,
              k.m_,
              k.An,
              f.fS,
              f.fg,
              c.rl,
              c.nJ,
              c.yw,
              g.Wk,
              g.VT,
              g._g,
              D.Ve,
              D.VO,
              E.wT,
              h.RI,
              h.mq,
              h.T8,
              m.HF,
              m.Uq,
              m.gx,
              m.vY,
              m.yF,
              m.G9,
              m.m7,
              b.b,
              p.X1,
              p.l_,
            ],
            styles: [
              '.config-wrapper[_ngcontent-%COMP%]{margin-bottom:15px;display:flex;align-items:center;flex-wrap:wrap}.config-wrapper[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{font-weight:700;margin-right:15px;display:block;width:225px}.config-wrapper[_ngcontent-%COMP%]   .mat-radio-button[_ngcontent-%COMP%] ~ .mat-radio-button[_ngcontent-%COMP%]{margin-left:16px}.config-wrapper_step[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]{margin-right:20px;width:100px}.zone[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.zone-value[_ngcontent-%COMP%]{font-weight:700}.zone-config[_ngcontent-%COMP%]{flex-direction:column}.api-table-properties[_ngcontent-%COMP%]{text-align:left;border-radius:2px;border-spacing:0;margin:0 0 32px;width:100%;border-collapse:collapse;border-spacing:2px;background-color:#fff}.api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]{display:table-row-group;vertical-align:middle}.api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#00000014}.api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.03);padding:8px 16px}.api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child, .api-table-properties[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:first-child{font-weight:700}.table[_ngcontent-%COMP%]{border-collapse:collapse;margin-bottom:30px;height:250px}.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px}.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f2f2}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{padding-top:12px;padding-bottom:12px;text-align:left;color:#fff}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:first-of-type{background-color:#268fa7}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:last-of-type{background-color:#8a178c}.datepicker-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.datepicker-acctions[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:space-between}',
            ],
          })),
          i
        );
      })();
    },
  },
]);
